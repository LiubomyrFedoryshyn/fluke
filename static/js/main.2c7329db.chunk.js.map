{"version":3,"sources":["components/Container/styles.ts","components/Container/index.ts","components/Container/Container.tsx","utils/colors.ts","components/EventsFilters/styles.ts","utils/constants.ts","services/api/httpRequest.tsx","services/api/rest/methods.tsx","components/EventsFilters/EventsFilters.tsx","components/EventsFilters/index.ts","components/EventModal/styles.ts","components/EventModal/EvemtModal.tsx","components/EventsTable/styles.ts","components/EventsTable/index.ts","components/EventsTable/EventsTable.tsx","components/Loader/styles.ts","components/Loader/index.tsx","components/Loader/Loader.tsx","EventApp.tsx","index.tsx"],"names":["SContainer","styled","div","margin","maxWidth","padding","SContainerContent","display","justifyContent","flexDirection","alignContent","alignItems","Container","children","mainColor","grayColor","darkGrayColor","SFilters","width","height","input","border","borderRadius","fontSize","borderColor","backgroundColor","transition","cursor","p","color","opacity","transform","SItem","marginLeft","marginBottom","STATUS_OPTIONS","label","value","DEFAULT_CATEGORY","httpRequest","a","url","method","params","headers","data","authHeaders","axios","response","console","log","fetchEvents","daysCount","status","category","EventsFilters","setDaysCount","setStatus","setCategory","setOrder","order","useEffect","getCategories","useState","Date","startDate","setStartDate","categoriesOptions","setCategoriesOptions","res","categories","map","el","title","id","className","onClick","maxDate","selected","onChange","date","getTime","Math","abs","toFixed","setDate","classNamePrefix","defaultValue","isSearchable","name","options","SModalContent","position","right","top","h3","marginTop","h5","EventModal","eventModalOpened","setEventModalOpened","eventDetails","appElement","document","getElementById","isOpen","onRequestClose","style","content","left","bottom","marginRight","contentLabel","description","sources","STable","textAlign","table","tr","td","borderTop","borderRight","tbody","EventsTable","events","tableInfo","setEventDetails","length","closed","SLoader","zIndex","Loader","loading","EventApp","link","setTableInfo","setLoading","getEvents","reverse","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2c7329db.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst SContainer = styled.div({\n    margin: \"0 auto\",\n    \"@media only screen and (min-width: 1382px)\": {\n        maxWidth: 1255,\n        padding: \"0 15px\",\n    },\n    \"@media only screen and (max-width: 1382px)\": {\n        maxWidth: \"100%\",\n        padding: \"0 10px\",\n    },\n    \"@media only screen and (max-width: 1200px)\": {\n        maxWidth: 1045,\n    },\n    \"@media only screen and (max-width: 991px)\": {\n        maxWidth: 840,\n    },\n    \"@media only screen and (max-width: 768px)\": {\n        maxWidth: 630,\n    },\n});\n\nconst SContainerContent = styled.div({\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n});\n\nexport { SContainer, SContainerContent };\n","import Container from \"./Container\";\n\nexport default Container;\n","import React, { FC } from \"react\";\nimport { SContainer, SContainerContent } from \"./styles\";\n\ninterface IContainer {\n    children: any;\n}\n\nconst Container: FC<IContainer> = ({ children }) => {\n    return (\n        <SContainer>\n            <SContainerContent>{children}</SContainerContent>\n        </SContainer>\n    );\n};\n\nexport default Container;\n","const mainColor = \"#216BA5\";\nconst grayColor = \"#F0F0F0\";\nconst darkGrayColor = \"#AEAEAE\";\nconst whiteColor = \"#fff\";\n\nexport { mainColor, grayColor, darkGrayColor, whiteColor };\n","import styled from \"styled-components\";\nimport { mainColor, grayColor, darkGrayColor } from \"../../utils/colors\";\n\nconst SFilters = styled.div({\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    width: \"100%\",\n    margin: \"15px 0\",\n    \".react-datepicker-wrapper\": {\n        width: \"fit-content\",\n        height: \"fit-content\",\n        input: {\n            border: `1px solid ${darkGrayColor}`,\n            borderRadius: 4,\n            fontSize: 16,\n            padding: \"9px 15px\",\n        },\n    },\n    \".custom-select\": {\n        \".select__control\": {\n            borderColor: darkGrayColor,\n            width: 180,\n            height: 38,\n        },\n        \".select__option--is-selected\": {\n            backgroundColor: mainColor,\n        },\n    },\n    \".order\": {\n        transition: \"0.3s\",\n        cursor: \"pointer\",\n        fontSize: 20,\n        backgroundColor: grayColor,\n        borderRadius: 4,\n        height: 25,\n        padding: \"5px 15px\",\n        border: `1px solid ${darkGrayColor}`,\n        p: {\n            transition: \"0.3s\",\n            margin: 0,\n            color: mainColor,\n        },\n        \"&:hover\": {\n            opacity: \"0.5\",\n        },\n        \"&.desc\": {\n            p: {\n                transform: \"rotate(180deg)\",\n            },\n        },\n    },\n    \"@media only screen and (max-width: 991px)\": {\n        justifyContent: \"center\",\n    },\n    \"@media only screen and (max-width: 768px)\": {\n        flexDirection: \"column\",\n    },\n});\n\nconst SItem = styled.div({\n    marginLeft: 15,\n    p: {\n        color: darkGrayColor,\n        margin: 0,\n        marginBottom: 5,\n    },\n    \"@media only screen and (max-width: 768px)\": {\n        marginBottom: 15,\n        \"&:last-of-type\": {\n            marginBottom: 0,\n        },\n    },\n});\n\nexport { SFilters, SItem };\n","export const STATUS_OPTIONS = [\n    { label: \"Open\", value: \"open\" },\n    { label: \"Closed\", value: \"closed\" },\n];\n\nexport const DEFAULT_CATEGORY = { label: \"All\", value: \"\" };\n","import axios from \"axios\";\n\ninterface IBody<T> {\n    url: string;\n    method: string | any;\n    params?: object;\n    headers?: object;\n    data?: T;\n}\n\nconst httpRequest = async <T,>({\n    url = \"/\",\n    method = \"GET\",\n    params = {},\n    headers = {},\n    data,\n}: IBody<T>) => {\n    try {\n        const authHeaders: any = {\n            ...headers,\n        };\n\n        const response = await axios({\n            url,\n            method,\n            params,\n            headers: {\n                ...authHeaders,\n            },\n            data,\n        });\n\n        return response;\n    } catch (e: any) {\n        console.log(e);\n    }\n};\n\nexport default httpRequest;\n","import httpRequest from \"../httpRequest\";\nimport { AdditionalInfo, Categories } from \"./interfaces\";\n\nconst fetchEvents = (\n    daysCount: string,\n    status: string,\n    category?: string | number\n) => {\n    return httpRequest<AdditionalInfo>({\n        url: `https://eonet.sci.gsfc.nasa.gov/api/v2.1/${\n            category ? `categories/${category}` : \"events\"\n        }?days=${daysCount}&status=${status}`,\n        method: \"GET\",\n    });\n};\n\nconst fetchCategories = () => {\n    return httpRequest<Categories>({\n        url: `  https://eonet.sci.gsfc.nasa.gov/api/v2.1/categories`,\n        method: \"GET\",\n    });\n};\n\nexport { fetchEvents, fetchCategories };\n","import React, { FC, useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Select from \"react-select\";\nimport { SFilters, SItem } from \"./styles\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { DEFAULT_CATEGORY, STATUS_OPTIONS } from \"../../utils/constants\";\nimport { fetchCategories } from \"../../services/api/rest/methods\";\nimport { Category, Option } from \"../../services/api/rest/interfaces\";\n\ninterface IFilters {\n    setDaysCount: (param: string) => void;\n    setStatus: (status: string) => void;\n    setCategory: (category: number | string) => void;\n    setOrder: () => void;\n    order: string;\n}\n\nconst EventsFilters: FC<IFilters> = ({\n    setDaysCount,\n    setStatus,\n    setCategory,\n    setOrder,\n    order,\n}) => {\n    useEffect(() => {\n        getCategories();\n    }, []);\n\n    const [startDate, setStartDate] = useState(new Date());\n    const [categoriesOptions, setCategoriesOptions] = useState<Option[]>([\n        DEFAULT_CATEGORY,\n    ]);\n\n    const getCategories = async () => {\n        try {\n            const res: any = await fetchCategories();\n            setCategoriesOptions([\n                ...categoriesOptions,\n                ...res?.data.categories.map((el: Category) => {\n                    return {\n                        label: el.title,\n                        value: el.id,\n                    };\n                }),\n            ]);\n        } catch (err) {\n            console.log(\"err\", err);\n        }\n    };\n\n    const setDate = (date: Date) => {\n        setStartDate(date);\n        const daysCount =\n            (date.getTime() - new Date().getTime()) / (1000 * 3600 * 24);\n        setDaysCount(Math.abs(daysCount).toFixed());\n    };\n\n    const getStatus = (status: any) => setStatus(status.value);\n\n    const getCategory = (category: any) => setCategory(category.value);\n\n    return (\n        <SFilters>\n            <SItem>\n                <p>Order:</p>\n                <div\n                    className={`order ${order === \"desc\" ? \"desc\" : \"asc\"}`}\n                    onClick={setOrder}\n                >\n                    <p>&#8593;</p>\n                </div>\n            </SItem>\n            <SItem>\n                <p>Prior date:</p>\n                <DatePicker\n                    maxDate={new Date()}\n                    selected={startDate}\n                    onChange={(date: any) => setDate(date)}\n                />\n            </SItem>\n            <SItem>\n                <p>Status:</p>\n                <Select\n                    className=\"custom-select\"\n                    classNamePrefix=\"select\"\n                    defaultValue={STATUS_OPTIONS[0]}\n                    isSearchable\n                    name=\"color\"\n                    options={STATUS_OPTIONS}\n                    onChange={getStatus}\n                />\n            </SItem>\n            <SItem>\n                <p>Category:</p>\n                <Select\n                    className=\"custom-select\"\n                    classNamePrefix=\"select\"\n                    defaultValue={categoriesOptions[0]}\n                    isSearchable\n                    name=\"color\"\n                    options={categoriesOptions}\n                    onChange={getCategory}\n                />\n            </SItem>\n        </SFilters>\n    );\n};\n\nexport default EventsFilters;\n","import EventsFilters from \"./EventsFilters\";\n\nexport default EventsFilters;\n","import styled from \"styled-components\";\nimport { darkGrayColor } from \"../../utils/colors\";\n\nconst SModalContent = styled.div({\n    width: 500,\n    position: \"relative\",\n    \".close\": {\n        margin: 0,\n        position: \"absolute\",\n        right: 0,\n        top: -12,\n        cursor: \"pointer\",\n        transition: \"0.3s\",\n        color: darkGrayColor,\n        \"&:hover\": {\n            opacity: \"0.5\",\n        },\n    },\n    h3: {\n        \"&:first-of-type\": {\n            marginTop: 0,\n        },\n    },\n    h5: {\n        color: darkGrayColor,\n        \"&:last-of-type\": {\n            marginBottom: 0,\n        },\n    },\n    \"@media only screen and (max-width: 768px)\": {\n        width: 425,\n    },\n    \"@media only screen and (max-width: 425px)\": {\n        width: 320,\n    },\n    \"@media only screen and (max-width: 320px)\": {\n        width: 270,\n    },\n});\n\nexport { SModalContent };\n","import React, { FC } from \"react\";\nimport Modal from \"react-modal\";\nimport { IEvents } from \"../../services/api/rest/interfaces\";\nimport { SModalContent } from \"./styles\";\n\ninterface IModal {\n    eventModalOpened: boolean;\n    setEventModalOpened: (value: boolean) => void;\n    eventDetails: IEvents | null;\n}\n\nconst EventModal: FC<IModal> = ({\n    eventModalOpened,\n    setEventModalOpened,\n    eventDetails,\n}) => {\n    if (!eventModalOpened) {\n        return null;\n    }\n\n    const customStyles = {\n        content: {\n            top: \"50%\",\n            left: \"50%\",\n            right: \"auto\",\n            bottom: \"auto\",\n            marginRight: \"-50%\",\n            transform: \"translate(-50%, -50%)\",\n        },\n    };\n\n    return (\n        <Modal\n            appElement={document.getElementById(\"root\") as HTMLElement}\n            isOpen={eventModalOpened}\n            onRequestClose={() => setEventModalOpened(false)}\n            style={customStyles}\n            contentLabel=\"Event Modal\"\n        >\n            <SModalContent>\n                <p className=\"close\" onClick={() => setEventModalOpened(false)}>\n                    X\n                </p>\n                <h3>{eventDetails?.title}</h3>\n                <h3>{eventDetails?.description}</h3>\n                <h3>{eventDetails?.id}</h3>\n                <h4>Categories:</h4>\n                {eventDetails?.categories.map((el: any) => (\n                    <h5 key={el.id}>{el.title}</h5>\n                ))}\n                <h4>Sources:</h4>\n                {eventDetails?.sources.map((el: any) => (\n                    <h5 key={el.id}>{el.id}</h5>\n                ))}\n            </SModalContent>\n        </Modal>\n    );\n};\n\nexport default EventModal;\n","import styled from \"styled-components\";\nimport { darkGrayColor, grayColor } from \"../../utils/colors\";\n\nconst STable = styled.div({\n    // minHeight: \"calc(100vh - 68px)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 50,\n    \"h1, h2\": {\n        textAlign: \"center\",\n    },\n    table: {\n        width: 750,\n        border: `1px solid ${darkGrayColor}`,\n        \"th, td\": {\n            padding: \"5px 15px\",\n        },\n\n        tr: {\n            td: {\n                borderTop: `1px solid ${darkGrayColor}`,\n                borderRight: `1px solid ${darkGrayColor}`,\n                \"&:last-of-type\": {\n                    borderRight: 0,\n                },\n            },\n        },\n        tbody: {\n            tr: {\n                cursor: \"pointer\",\n                transition: \"0.3s\",\n                \"&.closed\": {\n                    backgroundColor: grayColor,\n                },\n                \"&:hover\": {\n                    opacity: 0.5,\n                },\n            },\n        },\n    },\n    \"@media only screen and (max-width: 768px)\": {\n        table: {\n            width: \"100%\",\n        },\n    },\n});\n\nexport { STable };\n","import EventsTable from \"./EventsTable\";\n\nexport default EventsTable;\n","import React, { FC, useState } from \"react\";\nimport { IEvents, AdditionalInfo } from \"../../services/api/rest/interfaces\";\nimport EventModal from \"../EventModal/EvemtModal\";\nimport { STable } from \"./styles\";\n\ninterface ITable {\n    events: IEvents[];\n    tableInfo: AdditionalInfo;\n}\n\nconst EventsTable: FC<ITable> = ({ events, tableInfo }) => {\n    const [eventModalOpened, setEventModalOpened] = useState<boolean>(false);\n    const [eventDetails, setEventDetails] = useState<IEvents | null>(null);\n\n    return (\n        <STable>\n            <h1>{tableInfo.title}</h1>\n            <h2>{tableInfo.description}</h2>\n            {events.length > 0 ? (\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {events.map((el) => {\n                            return (\n                                <tr\n                                    onClick={() => {\n                                        setEventModalOpened(true);\n                                        setEventDetails(el);\n                                    }}\n                                    className={el.closed ? \"closed\" : \"opened\"}\n                                    key={el.id}\n                                >\n                                    <td>{el.title}</td>\n                                    <td>{el.description || \"-\"}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            ) : (\n                <h1>No events found</h1>\n            )}\n            <EventModal\n                eventDetails={eventDetails}\n                setEventModalOpened={setEventModalOpened}\n                eventModalOpened={eventModalOpened}\n            />\n        </STable>\n    );\n};\n\nexport default EventsTable;\n","import styled from \"styled-components\";\nimport { whiteColor } from \"../../utils/colors\";\n\nconst SLoader = styled.div({\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    opacity: \"0.7\",\n    backgroundColor: whiteColor,\n    zIndex: 2,\n});\n\nexport { SLoader };\n","import Loader from \"./Loader\";\n\nexport default Loader;\n","import React, { FC } from \"react\";\nimport { SLoader } from \"./styles\";\n\ninterface ILoader {\n    loading: boolean;\n}\n\nconst Loader: FC<ILoader> = ({ loading }) => {\n    if (!loading) {\n        return null;\n    }\n\n    return <SLoader />;\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport Container from \"./components/Container\";\nimport EventsFilters from \"./components/EventsFilters\";\nimport EventsTable from \"./components/EventsTable\";\nimport Loader from \"./components/Loader\";\nimport { AdditionalInfo } from \"./services/api/rest/interfaces\";\n\nimport { fetchEvents } from \"./services/api/rest/methods\";\nimport { DEFAULT_CATEGORY, STATUS_OPTIONS } from \"./utils/constants\";\n\nconst EventApp = () => {\n    const [tableInfo, setTableInfo] = useState<AdditionalInfo>({\n        title: \"\",\n        description: \"\",\n        events: [],\n        link: \"\",\n    });\n    const [daysCount, setDaysCount] = useState(\"0\");\n    const [status, setStatus] = useState(STATUS_OPTIONS[0].value);\n    const [category, setCategory] = useState<string | number>(\n        DEFAULT_CATEGORY.value\n    );\n    const [order, setOrder] = useState(\"asc\");\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        getEvents();\n    }, [daysCount, status, category]);\n\n    const getEvents = async () => {\n        try {\n            setLoading(true);\n            const res: any = await fetchEvents(daysCount, status, category);\n            setTableInfo(res?.data);\n            setLoading(false);\n        } catch (err) {\n            console.log(\"err\", err);\n        }\n    };\n\n    const changeOrder = () => {\n        if (order === \"asc\") {\n            setOrder(\"desc\");\n        } else {\n            setOrder(\"asc\");\n        }\n        setTableInfo({ ...tableInfo, events: tableInfo.events.reverse() });\n    };\n\n    return (\n        <Container>\n            <Loader loading={loading} />\n            <>\n                <EventsFilters\n                    order={order}\n                    setOrder={changeOrder}\n                    setCategory={setCategory}\n                    setStatus={setStatus}\n                    setDaysCount={setDaysCount}\n                />\n\n                <EventsTable tableInfo={tableInfo} events={tableInfo.events} />\n            </>\n        </Container>\n    );\n};\n\nexport default EventApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport EventApp from \"./EventApp\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <EventApp />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}